// Code generated by go-enum
// DO NOT EDIT!

package tasks

import (
	"fmt"
	"strings"
)

const (
	// TaskStepStatusINITIAL is a TaskStepStatus of type INITIAL
	TaskStepStatusINITIAL TaskStepStatus = iota
	// TaskStepStatusRUNNING is a TaskStepStatus of type RUNNING
	TaskStepStatusRUNNING
	// TaskStepStatusDONE is a TaskStepStatus of type DONE
	TaskStepStatusDONE
	// TaskStepStatusERROR is a TaskStepStatus of type ERROR
	TaskStepStatusERROR
	// TaskStepStatusCANCELED is a TaskStepStatus of type CANCELED
	TaskStepStatusCANCELED
)

const _TaskStepStatusName = "INITIALRUNNINGDONEERRORCANCELED"

var _TaskStepStatusMap = map[TaskStepStatus]string{
	0: _TaskStepStatusName[0:7],
	1: _TaskStepStatusName[7:14],
	2: _TaskStepStatusName[14:18],
	3: _TaskStepStatusName[18:23],
	4: _TaskStepStatusName[23:31],
}

func (i TaskStepStatus) String() string {
	if str, ok := _TaskStepStatusMap[i]; ok {
		return str
	}
	return fmt.Sprintf("TaskStepStatus(%d)", i)
}

var _TaskStepStatusValue = map[string]TaskStepStatus{
	_TaskStepStatusName[0:7]:                    0,
	strings.ToLower(_TaskStepStatusName[0:7]):   0,
	_TaskStepStatusName[7:14]:                   1,
	strings.ToLower(_TaskStepStatusName[7:14]):  1,
	_TaskStepStatusName[14:18]:                  2,
	strings.ToLower(_TaskStepStatusName[14:18]): 2,
	_TaskStepStatusName[18:23]:                  3,
	strings.ToLower(_TaskStepStatusName[18:23]): 3,
	_TaskStepStatusName[23:31]:                  4,
	strings.ToLower(_TaskStepStatusName[23:31]): 4,
}

// ParseTaskStepStatus attempts to convert a string to a TaskStepStatus
func ParseTaskStepStatus(name string) (TaskStepStatus, error) {
	if x, ok := _TaskStepStatusValue[name]; ok {
		return TaskStepStatus(x), nil
	}
	return TaskStepStatus(0), fmt.Errorf("%s is not a valid TaskStepStatus", name)
}
