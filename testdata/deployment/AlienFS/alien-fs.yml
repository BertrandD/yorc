tosca_definitions_version: alien_dsl_1_2_0
description: Alien4Cloud generated service template
template_name: Test2
template_version: 0.1.0-SNAPSHOT
template_author: admin

imports:
  - openstack-types: <janus-openstack-types.yml>
  - alien-extended-storage-types: alien-extended-storage-types/alien-extended-storage-types.yml

topology_template:
  node_templates:
    BlockStorage:
      type: janus.nodes.openstack.BlockStorage
      properties:
        device: /dev/vdb
        size: 1 GIB
        deletable: true
      requirements:
        - attachment:
            node: Compute
            capability: tosca.capabilities.Attachment
            relationship: tosca.relationships.AttachTo
    LinuxFileSystem:
      type: alien.nodes.LinuxFileSystem
      properties:
        location: /mnt/BS1
        fs_type: ext4
      requirements:
        - host:
            node: Compute
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
        - partition:
            node: BlockStorage
            capability: tosca.capabilities.Node
            relationship: alien.relationships.LinuxPartition
            properties:
              partition_type: 83
    Compute:
      type: janus.nodes.openstack.Compute
      properties:
        user: cloud-user
        flavor: 2
        # Liberty
        image: 4bde6002-649d-4868-a5cb-fcd36d5ffa63
        # IceHouse
#        image: 89ec515c-3251-4c2f-8402-bda280c31650
#        availability_zone: nova
        key_pair: janus
      capabilities:
        scalable:
          properties:
            max_instances: 5
            min_instances: 1
            default_instances: 1
        endpoint:
          properties:
            protocol: tcp
            initiator: source
            secure: true
            network_name: PRIVATE
  workflows:
    install:
      steps:
        Compute_install:
          node: Compute
          activity:
            delegate: install
          on-success:
            - LinuxFileSystem_initial
        BlockStorage_install:
          node: BlockStorage
          activity:
            delegate: install
          on-success:
            - LinuxFileSystem_initial
        LinuxFileSystem_initial:
          node: LinuxFileSystem
          activity:
            set_state: initial
          on-success:
            - LinuxFileSystem_creating
        LinuxFileSystem_creating:
          node: LinuxFileSystem
          activity:
            set_state: creating
          on-success:
            - LinuxFileSystem_created
        LinuxFileSystem_created:
          node: LinuxFileSystem
          activity:
            set_state: created
          on-success:
            - LinuxFileSystem_configuring
        LinuxFileSystem_configuring:
          node: LinuxFileSystem
          activity:
            set_state: configuring
          on-success:
            - LinuxFileSystem_pre_configure_source/1
        LinuxFileSystem_pre_configure_source/1:
          node: LinuxFileSystem
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Configure.pre_configure_source/1
          on-success:
            - configure_LinuxFileSystem
        configure_LinuxFileSystem:
          node: LinuxFileSystem
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - LinuxFileSystem_post_configure_source/1
        LinuxFileSystem_post_configure_source/1:
          node: LinuxFileSystem
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Configure.post_configure_source/1
          on-success:
            - LinuxFileSystem_configured
        LinuxFileSystem_configured:
          node: LinuxFileSystem
          activity:
            set_state: configured
          on-success:
            - LinuxFileSystem_starting
        LinuxFileSystem_starting:
          node: LinuxFileSystem
          activity:
            set_state: starting
          on-success:
            - start_LinuxFileSystem
        start_LinuxFileSystem:
          node: LinuxFileSystem
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - LinuxFileSystem_started
        LinuxFileSystem_started:
          node: LinuxFileSystem
          activity:
            set_state: started
    uninstall:
      steps:
        Compute_uninstall:
          node: Compute
          activity:
            delegate: uninstall
        BlockStorage_uninstall:
          node: BlockStorage
          activity:
            delegate: uninstall
        LinuxFileSystem_stopping:
          node: LinuxFileSystem
          activity:
            set_state: stopping
          on-success:
            - stop_LinuxFileSystem
        stop_LinuxFileSystem:
          node: LinuxFileSystem
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - LinuxFileSystem_stopped
        LinuxFileSystem_stopped:
          node: LinuxFileSystem
          activity:
            set_state: stopped
          on-success:
            - LinuxFileSystem_deleting
        LinuxFileSystem_deleting:
          node: LinuxFileSystem
          activity:
            set_state: deleting
          on-success:
            - LinuxFileSystem_deleted
        LinuxFileSystem_deleted:
          node: LinuxFileSystem
          activity:
            set_state: deleted
          on-success:
            - BlockStorage_uninstall
            - Compute_uninstall
