#
# Starlings
# Copyright (C) 2015 Bull S.A.S. - All rights reserved
#

description: Dummy Starlings Sample
template_name: dummy-types
template_version: 1.0.0
template_author: admin


node_types:
  starlings.nodes.Dummy:
    derived_from: tosca.nodes.SoftwareComponent
    description: Installation of a Dummy Server or Agent
    tags:
      icon: /images/dummy-icon.png
    properties:
      install_dnsmasq:
        type: boolean
        description: >
          By default, a dnsmask is installed as a DNS proxy.
          It is sometimes needed to remove it if another DNS is already installed (bind for example)
        default: true
      installation_directory:
        type: string
        description: Installation path of dummy
        default: ~/dummy
      datacenter:
        type: string
        description: Datacenter name
        default: dc1
      component_version:
        type: version
        description: the Dummy version installed.
        default: 0.5.2
        constraints:
          - equal: 0.5.2
    capabilities:
      agent:
        type: starlings.capabilities.DummyAgent
      server:
        type: starlings.capabilities.DummyServer
    requirements:
      - server_endpoint: starlings.capabilities.DummyServer
        relationship_type: starlings.relationships.ConnectsDummyAgentToServer
        lower_bound: 0
        upper_bound: 1
    interfaces:
      Standard:
        create:
          inputs:
            INSTALL_DNSMASQ: { get_property: [SELF, install_dnsmasq] }
            INSTALL_DIR: { get_property: [SELF, installation_directory] }
            IP_ADDRESS: { get_attribute: [HOST, ip_address] }
          implementation: scripts/dummy_install.sh
        configure:
          inputs:
            INSTALL_DIR: { get_property: [SELF, installation_directory] }
            DATACENTER: { get_property: [SELF, datacenter] }
            IP_ADDRESS: { get_attribute: [HOST, ip_address] }
          implementation: scripts/dummy_configure.sh
        start:
          inputs:
            INSTALL_DIR: { get_property: [SELF, installation_directory] }
          implementation: scripts/dummy_start.sh
        stop:
          inputs:
            INSTALL_DIR: { get_property: [SELF, installation_directory] }
          implementation: scripts/dummy_stop.sh
    artifacts:
      - scripts: scripts
        type: tosca.artifacts.File
      - utils_scripts: utils_scripts
        type: tosca.artifacts.File

capability_types:
  starlings.capabilities.DummyAgent:
    derived_from: tosca.capabilities.Root
  starlings.capabilities.DummyServer:
    derived_from: tosca.capabilities.Root

relationship_types:
  starlings.relationships.ConnectsDummyAgentToServer:
    derived_from: tosca.relationships.ConnectsTo
    description: >
      Connects a Dummy agent to a Dummy server
    valid_targets: [ starlings.capabilities.DummyServer ]
    interfaces:
      Configure:
        pre_configure_source:
          inputs:
            SERVER_IP: { get_attribute: [TARGET, ip_address] }
            INSTALL_DIR: { get_property: [SOURCE, installation_directory] }
          implementation: scripts/dummy_connects_agent_to_server.sh
        pre_configure_target:
          inputs:
            SERVER_IP: { get_attribute: [SOURCE, ip_address] }
            INSTALL_DIR: { get_property: [SOURCE, installation_directory] }
          implementation: scripts/dummy_connects_agent_to_server.sh
    artifacts:
      - scripts: scripts
        type: tosca.artifacts.File
      - utils_scripts: utils_scripts
        type: tosca.artifacts.File
  starlings.relationships.ConnectsToDummyAgent:
    derived_from: tosca.relationships.ConnectsTo
    description: >
      Connects to a Dummy agent
    valid_targets: [ starlings.capabilities.DummyAgent ]
