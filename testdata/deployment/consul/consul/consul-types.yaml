#
# Starlings
# Copyright (C) 2015 Bull S.A.S. - All rights reserved
#

description: Consul Starlings Sample
template_name: consul-types
template_version: 1.0.0
template_author: admin


node_types:
  starlings.nodes.Consul:
    derived_from: tosca.nodes.SoftwareComponent
    description: Installation of a Consul Server or Agent
    tags:
      icon: /images/consul-icon.png
    properties:
      install_dnsmasq:
        type: boolean
        description: The installed Java version
        default: true
      installation_directory:
        type: string
        description: Installation path
        default: ~/consul
      component_version:
        type: version
        default: ${consul.version}
        constraints:
          - equal: ${consul.version}
      version:
        type: version
        default: ${consul.version}
        constraints:
          - equal: ${consul.version}
    capabilities:
      agent:
        type: starlings.capabilities.ConsulAgent
      server:
        type: starlings.capabilities.ConsulServer
    requirements:
      - server_endpoint: starlings.capabilities.ConsulServer
        relationship_type: starlings.relationships.ConnectsConsulAgentToServer
        lower_bound: 0
        upper_bound: 1
    interfaces:
      Standard:
        create:
          inputs:
            INSTALL_DNSMASQ: { get_property: [SELF, install_dnsmasq] }
            INSTALL_DIR: { get_property: [SELF, installation_directory] }
            IP_ADDRESS: { get_attribute: [HOST, ip_address] }
          implementation: scripts/consul_install.sh
        configure:
          inputs:
            INSTALL_DIR: { get_property: [SELF, installation_directory] }
            IP_ADDRESS: { get_attribute: [HOST, ip_address] }
          implementation: scripts/consul_configure.sh
        start:
          inputs:
            INSTALL_DIR: { get_property: [SELF, installation_directory] }
          implementation: scripts/consul_start.sh
        stop:
          inputs:
            INSTALL_DIR: { get_property: [SELF, installation_directory] }
          implementation: scripts/consul_stop.sh
    artifacts:
      scripts:
        file: scripts
        type: tosca.artifacts.File
      utils_scripts:
        file: utils_scripts
        type: tosca.artifacts.File

capability_types:
  starlings.capabilities.ConsulAgent:
    derived_from: tosca.capabilities.Root
  starlings.capabilities.ConsulServer:
    derived_from: tosca.capabilities.Root

relationship_types:
  starlings.relationships.ConnectsConsulAgentToServer:
    derived_from: tosca.relationships.ConnectsTo
    description: >
      Connects a Consul agent to a Consul server
    valid_targets: [ starlings.capabilities.ConsulServer ]
    interfaces:
      Configure:
        pre_configure_source:
          inputs:
            SERVER_IP: { get_attribute: [TARGET, ip_address] }
            INSTALL_DIR: { get_property: [SOURCE, installation_directory] }
          implementation: scripts/consul_connects_agent_to_server.sh
    artifacts:
      scripts:
        file: scripts
        type: tosca.artifacts.File
      utils_scripts:
        file: utils_scripts
        type: tosca.artifacts.File
  starlings.relationships.ConnectsToConsulAgent:
    derived_from: tosca.relationships.ConnectsTo
    description: >
      Connects to a Consul agent
    valid_targets: [ starlings.capabilities.ConsulAgent ]
