tosca_definitions_version: janus_tosca_simple_yaml_1_0

template_name: janus-kubernetes-types-2
template_author: Janus
template_version: 1.0.0-SNAPSHOT

imports:
  - janus-types: <janus-types.yml>

repositories:
  docker:
    url: https://hub.docker.com/
    type: docker

node_types:
  janus.nodes.Docker.Nginx:
    derived_from: janus.nodes.DockerContainer
    interfaces:
      Standard:
        start:
          implementation:
            file: nginx
            repository: docker
            type: tosca.artifacts.Deployment.Image.Container.Kubernetes

  janus.nodes.Docker.MongoDB:
    derived_from: janus.nodes.DockerContainer
    capabilities:
      mongo_db:
        type: alien.capabilities.endpoint.docker.Mongo
    interfaces:
      Standard:
        start:
          implementation:
            file: mongo
            repository: docker
            type: tosca.artifacts.Deployment.Image.Container.Kubernetes

  janus.nodes.Docker.Wordpress:
    derived_from: janus.nodes.DockerContainer
    requirements:
      - mongo_db:
          capability: tosca.capabilities.Endpoint.Database
          relationship: tosca.relationships.ConnectsTo
          occurrences: [1, 1]
    capabilities:
      nodecellar_app:
        type: alien.capabilities.endpoint.docker.Nodecellar
    interfaces:
      Standard:
        start:
          inputs:
            ENV_MONGO_HOST: { get_property: [REQ_TARGET, mongo_db, ip_address] }
            ENV_MONGO_PORT: { get_property: [REQ_TARGET, mongo_db, port] }
            ENV_NODECELLAR_PORT: 3000
          implementation:
            file: afraisse/nodecellar:exp
            repository: docker
            type: tosca.artifacts.Deployment.Image.Container.Kubernetes

  janus.nodes.Docker.Kibana:
    derived_from: janus.nodes.DockerContainer
    properties:
      elastic_url:
        type: string
    interfaces:
      Standard:
        start:
          inputs:
            ELASTICSEARCH_URL: { get_property: [ SELF, elastic_url ] }
          implementation:
            file: kibana
            repository: docker
            type: tosca.artifacts.Deployment.Image.Container.Kubernetes

  janus.nodes.Docker.ElastichSearch:
    derived_from: janus.nodes.DockerContainer
    interfaces:
      Standard:
        start:
          implementation:
            file: elasticsearch
            repository: docker
            type: tosca.artifacts.Deployment.Image.Container.Kubernetes


capability_types:
  alien.capabilities.endpoint.docker.Mongo:
   derived_from: tosca.capabilities.Endpoint.Database
      description: >
        Capability to connect to a Docker-supported Mongo database through bridge networking.
      properties:
        docker_bridge_port_mapping:
          type: integer
          description: Port used to bridge to the container's endpoint.
          default: 0
        port:
          type: integer
          default: 27017

    alien.capabilities.endpoint.docker.Nodecellar:
      derived_from: alien.capabilities.endpoint.Docker
      properties:
        docker_bridge_port_mapping:
          type: integer
          description: Port used to bridge to the container's endpoint.
          default: 0
        port:
          type: integer
          default: 3000